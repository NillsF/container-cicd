name: Container CICD to kubernetes

on:
  push:
    branches: [ main ]
    paths: 
    - 2_container_ci-cd-kubernetes/**
    - .github/workflows/2_CICD-push-container-kubernetes.yaml

  workflow_dispatch:
  
permissions:
      id-token: write
      contents: read
jobs:
  CI:
    runs-on: ubuntu-latest
    
    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: az CLI login
        uses: azure/login@v1
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: ACR login
        run: az acr login -n nfacr
         
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: 2_container_ci-cd-kubernetes
          push: true
          tags: nfacr.azurecr.io/kubeclub-cd:${{ github.run_number }}
  
  CD:
    needs: CI
    runs-on: ubuntu-latest
    
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
           client-id: ${{ secrets.AZURE_CLIENT_ID }}
           tenant-id: ${{ secrets.AZURE_TENANT_ID }}
           subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: azure/aks-set-context@v3
        with:
           resource-group: denver-cicd
           cluster-name: denver-cicd
           admin: 'true'

      - name: Update deployment
        run: sed -i 's|nfacr.azurecr.io/spark-cd:.*|nfacr.azurecr.io/kubeclub-cd:${{ github.run_number }}|gi' 2_container_ci-cd-kubernetes/deployment.yaml

      - name: Update files
        run: kubectl apply -f 2_container_ci-cd-kubernetes/
        
      - name: Wait for deployment to finish
        run: kubectl rollout status deployment python-deployment-pipeline
        
      - name: Get service IP
        run: |
          PUBLICIP=""
          while [ -z $PUBLICIP ]; do
            echo "Waiting for public IP..."
            PUBLICIP=$(kubectl get service python-service-pipeline -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
            [ -z "$PUBLICIP" ] && sleep 10
          done
          echo $PUBLICIP
